name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      client: ${{ steps.filter.outputs.client }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2.11.1
        id: filter
        with:
          filters: |
            api:
              - 'apps/api/**'
            client:
              - 'apps/client/**'
              - 'libs/ui/**'

  lint-test:
    name: Nx Cloud - Main Job
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.13.0
    with:
      main-branch-name: main
      number-of-agents: 3
      node-version: '18'
      pnpm-version: '7.23'
      init-commands: |
        pnpm exec nx-cloud start-ci-run --stop-agents-after="build" --agent-count=3
      parallel-commands: |
        pnpm exec nx-cloud record -- pnpm exec nx format:check
      parallel-commands-on-agents: |
        pnpm exec nx affected --target=lint --parallel=3
        pnpm exec nx affected --target=test --parallel=3 --ci --code-coverage
        pnpm exec nx affected --target=build --parallel=3

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.13.0
    with:
      number-of-agents: 3
      node-version: '18'
      pnpm-version: '7.23'

  api-deploy:
    needs: [agents, lint-test, changes]
    # if: needs.changes.outputs.api == 'true' && github.ref == 'refs/heads/main'
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Deploying API
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Fly apps
        run: flyctl apps list

      - name: Deploy Project to fly
        run: flyctl deploy --remote-only --config ./apps/api/fly.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
